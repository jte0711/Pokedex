{"version":3,"sources":["config/env.js","api/pokeApi.js","config/color.js","components/PokeType.js","config/pokeContext.js","hooks/useIsMobile.js","pages/PokemonDetails.js","components/Card.js","components/MbCard.js","pages/pokemonList.js","components/ReleaseButton.js","components/WideCard.js","pages/MyPokemonList.js","api/myPoke.js","App.js","reportWebVitals.js","index.js"],"names":["apiUrl","pokes","mypokes","axios","require","getAllPokemons","a","localRes","localStorage","getItem","JSON","parse","get","res","result","data","results","map","Object","assign","owned","setItem","stringify","console","log","getPokemon","name","endpoint","getPokeMoves","url","typeColor","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","colors","mType","width","height","borderRadius","margin","dType","color","fontWeight","fontSize","justifyContent","alignItems","display","PokeType","props","style","mb","backgroundColor","colorName","children","PokeContext","React","createContext","useIsMobile","minSize","useState","isMb","setIsMb","setWidth","useEffect","useLayoutEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","lTxt","fontStyle","styleA","flexDirection","h2","textAlign","paddingTop","mr","paddingRight","PokemonDetails","moves","setMoves","pokemon","setPokemon","flavourText","setFlavourText","isMobile","pokeId","useParams","context","useContext","nameIsTaken","nickname","i","myPokemon","length","initFlTxt","getPokeSpecies","then","flavor_text_entries","flavor_text","temp","maxMove","species","slice","Promise","all","el","move","maxWidth","zIndex","paddingLeft","paddingBottom","src","sprites","front_default","maxHeight","fontFamily","lineHeight","charAt","toUpperCase","types","type","weight","border","marginTop","onClick","Math","random","alert","pokeName","pokeNickname","prompt","setMyPokemon","setOwnedPokemon","columns","stats","stat","base_stat","pp","power","Card","imageUrl","setImageUrl","setType","history","useHistory","getDeets","pokeDeets","marginBottom","pageBreakInside","breakInside","push","position","alt","padding","MbCard","PokemonList","pokeList","setPokeList","checkOwned","myPoke","ownedPokemon","initPokes","finalPokes","columnWidth","columnFill","columnCount","icLeave","background","ReleaseButton","clickHandler","icon","signOut","size","pad","card","WideCard","poke","setPoke","initPoke","releasePokemon","MyPokemonList","index","splice","App","collapsed","setCollapsed","getMyPokemon","tempOwn","Provider","value","newData","catchPokemon","nCount","newCount","className","minHeight","Navbar","light","expand","NavbarBrand","href","to","textDecoration","NavbarToggler","Collapse","isOpen","navbar","flexGrow","Nav","NavItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97df123e.chunk.js","sourcesContent":["const apiUrl = \"https://pokeapi.co/api/v2/\";\r\nconst pokes = \"POKEMONLIST\";\r\nconst mypokes = \"MYPOKEMON\";\r\n\r\nexport { apiUrl, pokes, mypokes };\r\n","import { apiUrl, pokes } from \"../config/env\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nasync function getAllPokemons() {\r\n  //check if pokemons stored in localStorage\r\n  const localRes = localStorage.getItem(pokes);\r\n  if (localRes != null) {\r\n    return JSON.parse(localRes);\r\n  }\r\n\r\n  //request pokemons data\r\n  const endpoint = apiUrl + \"pokemon/\";\r\n  try {\r\n    const res = await axios.get(endpoint);\r\n    let result = res.data.results;\r\n    result = result.map((data) => {\r\n      return Object.assign(data, { owned: 0 });\r\n    });\r\n    localStorage.setItem(pokes, JSON.stringify(result));\r\n    return result;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getPokemon(name) {\r\n  const localRes = localStorage.getItem(name);\r\n  if (localRes != null) {\r\n    return JSON.parse(localRes);\r\n  }\r\n\r\n  const endpoint = apiUrl + \"pokemon/\" + name;\r\n  try {\r\n    const res = await axios.get(endpoint);\r\n    localStorage.setItem(name, JSON.stringify(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getPokeMoves(name, url) {\r\n  const localRes = localStorage.getItem(name);\r\n  if (localRes != null) {\r\n    return JSON.parse(localRes);\r\n  }\r\n\r\n  const endpoint = url;\r\n  try {\r\n    const res = await axios.get(endpoint);\r\n    localStorage.setItem(name, JSON.stringify(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getPokeSpecies(name, url) {\r\n  const localRes = localStorage.getItem(\"species\" + name);\r\n  if (localRes != null) {\r\n    return JSON.parse(localRes);\r\n  }\r\n\r\n  const endpoint = url;\r\n  try {\r\n    const res = await axios.get(endpoint);\r\n    localStorage.setItem(\"species\" + name, JSON.stringify(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport { getAllPokemons, getPokemon, getPokeMoves, getPokeSpecies };\r\n","const typeColor = {\r\n  bug: \"#808000\",\r\n  dark: \"#594538\",\r\n  dragon: \"#4B0082\",\r\n  electric: \"#ffbf00\",\r\n  fairy: \"#D685AD\",\r\n  fighting: \"#800000\",\r\n  fire: \"#FF7A00\",\r\n  flying: \"#64A0ED\",\r\n  ghost: \"#690095\",\r\n  grass: \"#008000\",\r\n  ground: \"#c2b280\",\r\n  ice: \"#00EAFF\",\r\n  normal: \"#8c7d70\",\r\n  poison: \"#A33EA1\",\r\n  psychic: \"#F95587\",\r\n  rock: \"#9A2828\",\r\n  steel: \"#8C92AC\",\r\n  water: \"#2492FF\",\r\n};\r\n\r\nconst colors = {\r\n  background: \"#D9F2F2\",\r\n  navbar: \"#CC0000\",\r\n  button: \"#F04C4C\",\r\n  pokeGold: \"#FFDE00\",\r\n  outline: \"#3B4CCA\",\r\n  hp: \"#00CC00\",\r\n};\r\n\r\nexport { typeColor, colors };\r\n","import React from \"react\";\r\nimport { typeColor } from \"../config/color\";\r\n\r\nconst PokeType = (props) => {\r\n  return (\r\n    <div\r\n      style={\r\n        props.mb\r\n          ? { ...mType, backgroundColor: typeColor[props.colorName] }\r\n          : { ...dType, backgroundColor: typeColor[props.colorName] }\r\n      }\r\n    >\r\n      {props.mb ? null : props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mType = {\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  borderRadius: \"50px\",\r\n  margin: \"5px\",\r\n};\r\n\r\nconst dType = {\r\n  width: \"80px\",\r\n  height: \"25px\",\r\n  borderRadius: \"10px\",\r\n  color: \"white\",\r\n  fontWeight: \"700\",\r\n  fontSize: \"12px\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  display: \"flex\",\r\n  margin: \"5px\",\r\n};\r\n\r\nexport default PokeType;\r\n","import React from \"react\";\r\n\r\nconst PokeContext = React.createContext();\r\n\r\nexport default PokeContext;\r\n","import { useEffect, useLayoutEffect, useState } from \"react\";\r\n\r\nconst useIsMobile = (minSize) => {\r\n  const [isMb, setIsMb] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setIsMb(width <= minSize);\r\n  }, [width]);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n  return isMb;\r\n};\r\n\r\nexport default useIsMobile;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getPokemon, getPokeMoves, getPokeSpecies } from \"../api/pokeApi\";\r\nimport PokeType from \"../components/PokeType\";\r\nimport { typeColor } from \"../config/color\";\r\nimport PokeContext from \"../config/pokeContext\";\r\nimport isMobile from \"../hooks/useIsMobile\";\r\n\r\nconst PokemonDetails = (props) => {\r\n  const [moves, setMoves] = useState();\r\n  const [pokemon, setPokemon] = useState();\r\n  const [flavourText, setFlavourText] = useState();\r\n  const isMb = isMobile(769);\r\n  const { pokeId } = useParams();\r\n  const context = useContext(PokeContext);\r\n\r\n  const nameIsTaken = (nickname) => {\r\n    for (let i = 0; i < context.myPokemon.length; i++) {\r\n      if (nickname == context.myPokemon[i].nickname) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const catchPokemon = () => {\r\n    if (Math.random() < 0.5) {\r\n      alert(pokeId.charAt(0).toUpperCase() + pokeId.slice(1) + \" run away!\");\r\n      return;\r\n    }\r\n    let pokeName = pokeId;\r\n    let pokeNickname = prompt(\"Please name your pokemon\");\r\n    console.log(nameIsTaken(pokeNickname));\r\n    if (nameIsTaken(pokeNickname)) {\r\n      alert(\"Nickname is used by other Pokemon\");\r\n      return;\r\n    }\r\n    context.setMyPokemon({ name: pokeName, nickname: pokeNickname });\r\n    context.setOwnedPokemon(pokeName);\r\n  };\r\n\r\n  const initFlTxt = (data) => {\r\n    getPokeSpecies(data.name, data.url).then((res) => {\r\n      setFlavourText(res.flavor_text_entries[0].flavor_text);\r\n    });\r\n  };\r\n\r\n  const initData = () => {\r\n    // const pokeDeets = await getPokemon(pokeId);\r\n    // setPokemon(pokeDeets);\r\n\r\n    getPokemon(pokeId).then(async (res) => {\r\n      setPokemon(res);\r\n      let temp = res.moves;\r\n      let maxMove = temp.length;\r\n      if (temp.length > 4) {\r\n        maxMove = 4;\r\n      }\r\n      initFlTxt(res.species);\r\n      temp = temp.slice(0, maxMove);\r\n      temp = await Promise.all(\r\n        temp.map(async (el) => {\r\n          return await getPokeMoves(el.move.name, el.move.url);\r\n        })\r\n      );\r\n\r\n      setMoves(temp);\r\n    });\r\n\r\n    // let temp = pokeDeets.moves;\r\n    // let maxMove = temp.length;\r\n    // if (temp.length > 4) {\r\n    //   maxMove = 4;\r\n    // }\r\n    // setMoves(temp.slice(0, maxMove));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(moves);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: isMb ? \"column\" : \"row\",\r\n        maxWidth: isMb ? null : \"50%\",\r\n        zIndex: 1,\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"10px\",\r\n        margin: isMb ? \"25px\" : \"auto\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: isMb ? null : \"40%\",\r\n          height: \"100%\",\r\n          alignItems: \"center\",\r\n          paddingLeft: \"20px\",\r\n          paddingRight: \"20px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            paddingTop: \"20px\",\r\n            paddingBottom: \"20px\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {pokemon ? (\r\n            <img\r\n              src={pokemon.sprites.front_default}\r\n              style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"20px\",\r\n            fontFamily: \"Roboto\",\r\n            fontStyle: \"normal\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"18px\",\r\n            lineHeight: \"21px\",\r\n          }}\r\n        >\r\n          {pokeId.charAt(0).toUpperCase() + pokeId.slice(1)}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"20px\",\r\n            fontFamily: \"Roboto\",\r\n            fontStyle: \"italic\",\r\n            fontWeight: \"300\",\r\n            fontSize: \"14px\",\r\n            lineHeight: \"16px\",\r\n          }}\r\n        >\r\n          {flavourText ? flavourText : null}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            paddingBottom: \"20px\",\r\n          }}\r\n        >\r\n          {pokemon\r\n            ? pokemon.types.map((data) => (\r\n                <PokeType colorName={data.type.name}>\r\n                  {data.type.name.charAt(0).toUpperCase() +\r\n                    data.type.name.slice(1)}\r\n                </PokeType>\r\n              ))\r\n            : null}\r\n        </div>\r\n        <div style={styleA}>\r\n          <div style={lTxt}>Height</div>\r\n          {pokemon ? (\r\n            <div style={{ fontSize: \"14px\" }}>{pokemon.height / 10}m</div>\r\n          ) : null}\r\n        </div>\r\n        <div style={styleA}>\r\n          <div style={lTxt}>Weight</div>\r\n          {pokemon ? (\r\n            <div style={{ fontSize: \"14px\" }}>{pokemon.weight / 10}kg</div>\r\n          ) : null}\r\n        </div>\r\n        <button\r\n          style={{\r\n            fontWeight: \"700\",\r\n            fontSize: \"14px\",\r\n            lineHeight: \"16px\",\r\n            color: \"white\",\r\n            width: \"150px\",\r\n            height: \"40px\",\r\n            backgroundColor: \"#F04C4C\",\r\n            border: \"none\",\r\n            borderRadius: \"25px\",\r\n            marginTop: \"40px\",\r\n          }}\r\n          onClick={catchPokemon}\r\n        >\r\n          CATCH\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: isMb ? null : \"60%\",\r\n          height: \"100%\",\r\n          paddingLeft: \"20px\",\r\n          paddingRight: \"20px\",\r\n        }}\r\n      >\r\n        <div style={h2}>Stats</div>\r\n        <hr></hr>\r\n        <div style={{ columns: \"2 auto\" }}>\r\n          {pokemon\r\n            ? pokemon.stats.map((data) => (\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <span style={lTxt}>\r\n                    {data.stat.name.charAt(0).toUpperCase() +\r\n                      data.stat.name.slice(1, 11)}\r\n                  </span>\r\n                  <span>{data.base_stat}</span>\r\n                </div>\r\n              ))\r\n            : null}\r\n        </div>\r\n        <div style={h2}>Moves</div>\r\n        <hr></hr>\r\n        <div>\r\n          {moves\r\n            ? moves.map((data) => (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    paddingBottom: \"15px\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <p\r\n                      style={{\r\n                        ...lTxt,\r\n                        paddingBottom: \"10px\",\r\n                        margin: \"0\",\r\n                        textAlign: \"left\",\r\n                        fontWeight: \"normal\",\r\n                      }}\r\n                    >\r\n                      {data.name.charAt(0).toUpperCase() + data.name.slice(1)}\r\n                    </p>\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                      <p style={{ ...mr, ...lTxt }}>PP: {data.pp}</p>\r\n                      <p style={{ ...mr, ...lTxt }}>Power: {data.power}</p>\r\n                    </div>\r\n                  </div>\r\n                  <PokeType colorName={data.type.name}>\r\n                    {data.type.name.charAt(0).toUpperCase() +\r\n                      data.type.name.slice(1, 11)}\r\n                  </PokeType>\r\n                </div>\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst lTxt = {\r\n  fontWeight: \"300\",\r\n  fontStyle: \"normal\",\r\n  fontSize: \"14px\",\r\n};\r\n\r\nconst styleA = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  width: \"100%\",\r\n  justifyContent: \"space-around\",\r\n};\r\n\r\nconst h2 = {\r\n  fontWeight: 400,\r\n  fontStyle: \"normal\",\r\n  fontSize: \"24px\",\r\n  width: \"100%\",\r\n  textAlign: \"left\",\r\n  paddingTop: \"20px\",\r\n};\r\n\r\nconst mr = {\r\n  margin: \"0\",\r\n  paddingRight: \"10px\",\r\n};\r\n\r\nexport default PokemonDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getPokemon } from \"../api/pokeApi\";\r\nimport { typeColor } from \"../config/color\";\r\nimport PokeType from \"./PokeType\";\r\nimport useIsMobile from \"../hooks/useIsMobile\";\r\n\r\nconst Card = (props) => {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [type, setType] = useState([]);\r\n  const history = useHistory();\r\n  const isMb = useIsMobile(426);\r\n\r\n  const goToPokemon = () => {\r\n    history.push(\"/pokemon/\" + props.name);\r\n  };\r\n  const getDeets = async () => {\r\n    const pokeDeets = await getPokemon(props.name);\r\n    setImageUrl(pokeDeets.sprites.front_default); //url\r\n    //setImageUrl(pokeDeets.sprites.other[\"official-artwork\"].front_default); //url\r\n\r\n    setType(pokeDeets.types); //list, check api call\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDeets();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        height: \"150px\",\r\n        width: \"250px\",\r\n        marginBottom: \"20px\",\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"white\",\r\n        pageBreakInside: \"avoid\",\r\n        breakInside: \"avoid\",\r\n      }}\r\n      onClick={goToPokemon}\r\n    >\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          zIndex: 1,\r\n          backgroundColor: \"#F04C4C\",\r\n          borderRadius: \"50px\",\r\n          width: \"30px\",\r\n          height: \"30px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          color: \"white\",\r\n          fontWeight: \"700\",\r\n        }}\r\n      >\r\n        {props.owned}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"50%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <img\r\n          src={imageUrl}\r\n          alt=\"Ivysaur sprite\"\r\n          style={{\r\n            maxWidth: \"100%\",\r\n            maxHeight: \"100%\",\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            zIndex: 2,\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"50%\",\r\n          paddingTop: \"25px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            margin: \"0px\",\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <p style={{ fontSize: \"18px\", margin: \"0px\", padding: \"0px\" }}>\r\n            {props.name.charAt(0).toUpperCase() + props.name.slice(1)}\r\n          </p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          {type.map((data) => (\r\n            <PokeType colorName={data.type.name}>\r\n              {data.type.name.toUpperCase()}\r\n            </PokeType>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getPokemon } from \"../api/pokeApi\";\r\n\r\nconst MbCard = (props) => {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const goToPokemon = () => {\r\n    history.push(\"/pokemon/\" + props.name);\r\n  };\r\n\r\n  const getDeets = async () => {\r\n    const pokeDeets = await getPokemon(props.name);\r\n    setImageUrl(pokeDeets.sprites.front_default); //url\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDeets();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        marginBottom: \"10px\",\r\n        borderRadius: \"10px\",\r\n        padding: \"5px\",\r\n      }}\r\n      onClick={goToPokemon}\r\n    >\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          zIndex: 1,\r\n          backgroundColor: \"#F04C4C\",\r\n          borderRadius: \"50px\",\r\n          width: \"20px\",\r\n          height: \"20px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          color: \"white\",\r\n          fontWeight: \"700\",\r\n        }}\r\n      >\r\n        {props.owned}\r\n      </div>\r\n      <div>\r\n        <img src={imageUrl} />\r\n      </div>\r\n      <div>\r\n        <p style={{ margin: \"0px\" }}>\r\n          {props.name.charAt(0).toUpperCase() + props.name.slice(1)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MbCard;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { getAllPokemons } from \"../api/pokeApi\";\r\nimport Card from \"../components/Card\";\r\nimport MbCard from \"../components/MbCard\";\r\nimport PokeContext from \"../config/pokeContext\";\r\nimport useIsMobile from \"../hooks/useIsMobile\";\r\n\r\nconst PokemonList = () => {\r\n  const context = useContext(PokeContext);\r\n  const [pokeList, setPokeList] = useState();\r\n  const isMb = useIsMobile(426);\r\n\r\n  const checkOwned = (data) => {\r\n    let myPoke = context.ownedPokemon;\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].name in myPoke) {\r\n        data[i].owned = myPoke[data[i].name];\r\n      }\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  const initPokes = async () => {\r\n    getAllPokemons().then((res) => {\r\n      let finalPokes = checkOwned(res);\r\n      setPokeList(finalPokes);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPokes();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingLeft: \"25px\",\r\n        paddingRight: \"25px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          columnWidth: isMb ? \"120px\" : \"260px\",\r\n          columnFill: \"auto\",\r\n          columnCount: 5,\r\n        }}\r\n      >\r\n        {pokeList\r\n          ? pokeList.map((data) => {\r\n              return isMb ? (\r\n                <MbCard name={data.name} apiUrl={data.url} owned={data.owned} />\r\n              ) : (\r\n                <Card name={data.name} apiUrl={data.url} owned={data.owned} />\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PokemonList;\r\n","import React, { useEffect } from \"react\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport signOut from \"@iconify/icons-bytesize/sign-out\";\r\nimport { colors } from \"../config/color\";\r\n\r\nconst ReleaseButton = (props) => {\r\n  return (\r\n    <button\r\n      style={icLeave}\r\n      onClick={() => {\r\n        props.clickHandler();\r\n      }}\r\n    >\r\n      <Icon icon={signOut} style={{ fontSize: props.size }} />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst icLeave = {\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  color: \"white\",\r\n  background: colors.navbar,\r\n  borderRadius: \"50px\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nexport default ReleaseButton;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { getPokemon } from \"../api/pokeApi\";\r\nimport { colors } from \"../config/color\";\r\nimport PokeContext from \"../config/pokeContext\";\r\nimport PokeType from \"./PokeType\";\r\nimport ReleaseButton from \"./ReleaseButton\";\r\nimport useIsMobile from \"../hooks/useIsMobile\";\r\n\r\nconst WideCard = (props) => {\r\n  const [type, setType] = useState([]);\r\n  const [poke, setPoke] = useState();\r\n  const isMb = useIsMobile(426);\r\n  const context = useContext(PokeContext);\r\n\r\n  const releaseHandler = () => {\r\n    context.releasePokemon(props.name, props.nickname);\r\n  };\r\n\r\n  const initPoke = async () => {\r\n    //Get Pokemon data\r\n    const pokeDeets = await getPokemon(props.name);\r\n    setPoke(pokeDeets);\r\n    setType(pokeDeets.types); //list, check api call\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPoke();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div\r\n      style={isMb ? { ...card, width: \"100%\" } : { ...card, width: \"31.25rem\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"25%\",\r\n        }}\r\n      >\r\n        <img src={poke ? poke.sprites.front_default : null} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-around\",\r\n          width: \"75%\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            ...pad,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p style={{ fontSize: \"18px\", fontStyle: \"bold\" }}>\r\n            {props.nickname}\r\n          </p>\r\n          <ReleaseButton size={\"20px\"} clickHandler={releaseHandler} />\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"0 20px 0 20px\",\r\n            backgroundColor: colors.hp,\r\n            borderRadius: \"25px\",\r\n            fontSize: \"12px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {poke ? poke.stats[0].base_stat : null}/\r\n          {poke ? poke.stats[0].base_stat : null}\r\n        </div>\r\n        <div\r\n          style={{\r\n            ...pad,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {type.map((data) => {\r\n            console.log(data);\r\n            return (\r\n              <PokeType colorName={data.type.name}>\r\n                {data.type.name.toUpperCase()}\r\n              </PokeType>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst hBar = {\r\n  height: \"15px\",\r\n  backgroundColor: colors.hp,\r\n  borderRadius: \"20px\",\r\n};\r\n\r\nconst pad = {\r\n  padding: \"0 20px 0 20px\",\r\n};\r\n\r\nconst card = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  height: \"150px\",\r\n  backgroundColor: \"white\",\r\n  marginBottom: \"10px\",\r\n  borderRadius: \"10px\",\r\n};\r\nexport default WideCard;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PokeContext from \"../config/pokeContext\";\r\nimport WideCard from \"../components/WideCard\";\r\n\r\nconst MyPokemonList = () => {\r\n  const [pokeList, setPokeList] = useState();\r\n  const context = useContext(PokeContext);\r\n\r\n  useEffect(() => {\r\n    setPokeList(context.myPokemon);\r\n  }, [context]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        paddingLeft: \"25px\",\r\n        paddingRight: \"25px\",\r\n      }}\r\n    >\r\n      {pokeList\r\n        ? pokeList.map((data, index) => (\r\n            <WideCard\r\n              nickname={data.nickname}\r\n              name={data.name}\r\n              apiUrl={data.url}\r\n              key={index}\r\n            />\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPokemonList;\r\n","import { mypokes } from \"../config/env\";\r\n\r\nconst catchPokemon = (data) => {\r\n  let temp = {\r\n    name: data.name,\r\n    nickname: data.nickname,\r\n  };\r\n  let res = JSON.parse(localStorage.getItem(mypokes));\r\n  if (res) {\r\n    res.push(temp);\r\n  } else {\r\n    res = [temp];\r\n  }\r\n  localStorage.setItem(mypokes, JSON.stringify(res));\r\n};\r\nconst getMyPokemon = () => {\r\n  let temp = localStorage.getItem(mypokes);\r\n  console.log(JSON.parse(temp));\r\n  return temp ? JSON.parse(temp) : [];\r\n};\r\nconst releasePokemon = async (data) => {\r\n  let temp = JSON.parse(localStorage.getItem(mypokes));\r\n\r\n  for (let i = 0; i < temp.length; i++) {\r\n    if (temp[i].nickname == data.nickname) {\r\n      temp.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  localStorage.setItem(mypokes, JSON.stringify(temp));\r\n};\r\n\r\nexport { catchPokemon, getMyPokemon, releasePokemon };\r\n","import { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport PokemonDetails from \"./pages/PokemonDetails\";\r\nimport PokemonList from \"./pages/pokemonList\";\r\nimport MyPokemonList from \"./pages/MyPokemonList\";\r\nimport PokeContext from \"./config/pokeContext\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { colors } from \"./config/color\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport backpack28Filled from \"@iconify/icons-fluent/backpack-28-filled\";\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n} from \"reactstrap\";\r\nimport { catchPokemon, getMyPokemon, releasePokemon } from \"./api/myPoke\";\r\n\r\nfunction App() {\r\n  const [myPokemon, setMyPokemon] = useState([]);\r\n  const [ownedPokemon, setOwnedPokemon] = useState({});\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed);\r\n\r\n  useEffect(() => {\r\n    let temp = getMyPokemon();\r\n    setMyPokemon(temp);\r\n\r\n    let tempOwn = ownedPokemon;\r\n    for (let i = 0; i < temp.length; i++) {\r\n      if (temp[i] in tempOwn) {\r\n        tempOwn[temp[i]] += 1;\r\n        continue;\r\n      }\r\n      tempOwn[temp[i]] = 1;\r\n    }\r\n    setOwnedPokemon(tempOwn);\r\n  }, []);\r\n\r\n  return (\r\n    <PokeContext.Provider\r\n      value={{\r\n        myPokemon: myPokemon,\r\n        setMyPokemon: (newData) => {\r\n          catchPokemon(newData);\r\n          setMyPokemon([...myPokemon, newData]);\r\n        },\r\n        releasePokemon: (name, nickname) => {\r\n          releasePokemon({ name: name, nickname: nickname });\r\n          let temp = myPokemon;\r\n          for (let i = 0; i < myPokemon.length; i++) {\r\n            if (myPokemon[i].nickname == nickname) {\r\n              temp.splice(i, 1);\r\n              break;\r\n            }\r\n          }\r\n          let nCount = ownedPokemon[name] - 1;\r\n          setMyPokemon(temp);\r\n          setOwnedPokemon(Object.assign({}, ownedPokemon, { [name]: nCount }));\r\n        },\r\n        ownedPokemon: ownedPokemon,\r\n        setOwnedPokemon: (newData) => {\r\n          let newCount = 1;\r\n          if (newData in ownedPokemon) {\r\n            newCount = ownedPokemon[newData] + 1;\r\n          }\r\n          setOwnedPokemon(\r\n            Object.assign({}, ownedPokemon, { [newData]: newCount })\r\n          );\r\n        },\r\n      }}\r\n    >\r\n      <Router>\r\n        <div\r\n          className=\"App\"\r\n          style={{\r\n            backgroundColor: colors.background,\r\n            minHeight: \"100vh\",\r\n            paddingBottom: \"25px\",\r\n          }}\r\n        >\r\n          <Navbar\r\n            color=\"faded\"\r\n            light\r\n            expand=\"md\"\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              paddingLeft: \"25px\",\r\n              paddingRight: \"25px\",\r\n              marginBottom: \"25px\",\r\n            }}\r\n          >\r\n            <NavbarBrand href=\"/\" className=\"mr-auto\">\r\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                <p\r\n                  className=\"logo\"\r\n                  style={{\r\n                    color: colors.pokeGold,\r\n                    paddingTop: \"25px\",\r\n                    paddingBottom: \"25px\",\r\n                  }}\r\n                >\r\n                  POKEMON\r\n                </p>\r\n              </Link>\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n            <Collapse isOpen={!collapsed} navbar style={{ flexGrow: \"0\" }}>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <Link to=\"/mypokemon\" style={{ textDecoration: \"none\" }}>\r\n                    <p\r\n                      className=\"mypoke\"\r\n                      style={{ fontSize: \"16px\", color: colors.pokeGold }}\r\n                    >\r\n                      My Pokemon\r\n                    </p>\r\n                    {/* <div\r\n                      style={{\r\n                        width: \"100px\",\r\n                        height: \"50px\",\r\n                        background: \"#FFDE00\",\r\n                        border: \"2px solid #3B4CCA\",\r\n                        boxSizing: \"border-box\",\r\n                        borderRadius: \"25px\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                      }}\r\n                    >\r\n                      <Icon\r\n                        style={{ width: \"30px\", height: \"30px\" }}\r\n                        icon={backpack28Filled}\r\n                      />\r\n                    </div> */}\r\n                  </Link>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Navbar>{\" \"}\r\n          {/* <div style={navbar}></div> */}\r\n          <Switch>\r\n            <Route exact path=\"/pokedex\">\r\n              <PokemonList />\r\n            </Route>\r\n            <Route exact path=\"/pokemon/:pokeId\">\r\n              <PokemonDetails />\r\n            </Route>\r\n            <Route exact path=\"/mypokemon\">\r\n              <MyPokemonList />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </PokeContext.Provider>\r\n  );\r\n}\r\n\r\nconst navbar = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  paddingLeft: \"25px\",\r\n  paddingRight: \"25px\",\r\n  marginBottom: \"50px\",\r\n  backgroundColor: colors.navbar,\r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}