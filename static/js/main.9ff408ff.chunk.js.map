{"version":3,"sources":["config/env.js","api/pokeApi.js","config/color.js","components/PokeType.js","config/pokeContext.js","pages/PokemonDetails.js","components/Card.js","pages/pokemonList.js","components/ReleaseButton.js","components/WideCard.js","pages/MyPokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["apiUrl","pokes","axios","require","getAllPokemons","a","localRes","localStorage","getItem","JSON","parse","get","res","result","data","results","map","Object","assign","owned","setItem","stringify","console","log","getPokemon","name","endpoint","getPokeMoves","url","typeColor","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","colors","PokeType","props","style","width","height","borderRadius","backgroundColor","colorName","color","fontWeight","fontSize","justifyContent","alignItems","display","margin","children","PokeContext","React","createContext","lTxt","fontStyle","styleA","flexDirection","h2","textAlign","paddingTop","mr","paddingRight","PokemonDetails","useState","moves","setMoves","pokemon","setPokemon","flavourText","setFlavourText","pokeId","useParams","context","useContext","initFlTxt","getPokeSpecies","then","flavor_text_entries","flavor_text","useEffect","temp","maxMove","length","species","slice","Promise","all","el","move","zIndex","paddingLeft","maxHeight","paddingBottom","src","sprites","front_default","maxWidth","fontFamily","lineHeight","charAt","toUpperCase","types","type","weight","border","marginTop","onClick","pokeName","pokeNickname","prompt","setMyPokemon","nickname","setOwnedPokemon","columns","stats","stat","base_stat","pp","power","Card","imageUrl","setImageUrl","setType","history","useHistory","getDeets","pokeDeets","marginBottom","push","position","alt","padding","PokemonList","pokeList","setPokeList","checkOwned","myPoke","ownedPokemon","i","initPokes","finalPokes","columnCount","icLeave","background","ReleaseButton","clickHandler","icon","signOut","size","pad","WideCard","poke","setPoke","initPoke","releasePokemon","MyPokemonList","myPokemon","navbar","App","squirtle","bulbasaur","Provider","value","newData","nCount","newCount","className","minHeight","to","textDecoration","boxSizing","backpack28Filled","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ff408ff.chunk.js","sourcesContent":["const apiUrl = \"https://pokeapi.co/api/v2/\";\r\nconst pokes = \"POKEMONLIST\";\r\n\r\nexport { apiUrl, pokes };\r\n","import { apiUrl, pokes } from \"../config/env\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nasync function getAllPokemons() {\r\n  //check if pokemons stored in localStorage\r\n  const localRes = localStorage.getItem(pokes);\r\n  if (localRes != null) {\r\n    return JSON.parse(localRes);\r\n  }\r\n\r\n  //request pokemons data\r\n  const endpoint = apiUrl + \"pokemon/\";\r\n  try {\r\n    const res = await axios.get(endpoint);\r\n    let result = res.data.results;\r\n    result = result.map((data) => {\r\n      return Object.assign(data, { owned: 0 });\r\n    });\r\n    localStorage.setItem(pokes, JSON.stringify(result));\r\n    return result;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getPokemon(name) {\r\n  const localRes = localStorage.getItem(name);\r\n  if (localRes != null) {\r\n    return JSON.parse(localRes);\r\n  }\r\n\r\n  const endpoint = apiUrl + \"pokemon/\" + name;\r\n  try {\r\n    const res = await axios.get(endpoint);\r\n    localStorage.setItem(name, JSON.stringify(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getPokeMoves(name, url) {\r\n  const localRes = localStorage.getItem(name);\r\n  if (localRes != null) {\r\n    return JSON.parse(localRes);\r\n  }\r\n\r\n  const endpoint = url;\r\n  try {\r\n    const res = await axios.get(endpoint);\r\n    localStorage.setItem(name, JSON.stringify(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getPokeSpecies(name, url) {\r\n  const localRes = localStorage.getItem(\"species\" + name);\r\n  if (localRes != null) {\r\n    return JSON.parse(localRes);\r\n  }\r\n\r\n  const endpoint = url;\r\n  try {\r\n    const res = await axios.get(endpoint);\r\n    localStorage.setItem(\"species\" + name, JSON.stringify(res.data));\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport { getAllPokemons, getPokemon, getPokeMoves, getPokeSpecies };\r\n","const typeColor = {\r\n  bug: \"#808000\",\r\n  dark: \"#594538\",\r\n  dragon: \"#4B0082\",\r\n  electric: \"#ffbf00\",\r\n  fairy: \"#D685AD\",\r\n  fighting: \"#800000\",\r\n  fire: \"#FF7A00\",\r\n  flying: \"#64A0ED\",\r\n  ghost: \"#690095\",\r\n  grass: \"#008000\",\r\n  ground: \"#c2b280\",\r\n  ice: \"#00EAFF\",\r\n  normal: \"#8c7d70\",\r\n  poison: \"#A33EA1\",\r\n  psychic: \"#F95587\",\r\n  rock: \"#9A2828\",\r\n  steel: \"#8C92AC\",\r\n  water: \"#2492FF\",\r\n};\r\n\r\nconst colors = {\r\n  background: \"#D9F2F2\",\r\n  navbar: \"#CC0000\",\r\n  button: \"#F04C4C\",\r\n  pokeGold: \"#FFDE00\",\r\n  outline: \"#3B4CCA\",\r\n  hp: \"#00CC00\",\r\n};\r\n\r\nexport { typeColor, colors };\r\n","import React from \"react\";\r\nimport { typeColor } from \"../config/color\";\r\n\r\nconst PokeType = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"80px\",\r\n        height: \"25px\",\r\n        borderRadius: \"10px\",\r\n        backgroundColor: typeColor[props.colorName],\r\n        color: \"white\",\r\n        fontWeight: \"700\",\r\n        fontSize: \"12px\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        margin: \"5px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokeType;\r\n","import React from \"react\";\r\n\r\nconst PokeContext = React.createContext();\r\n\r\nexport default PokeContext;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getPokemon, getPokeMoves, getPokeSpecies } from \"../api/pokeApi\";\r\nimport PokeType from \"../components/PokeType\";\r\nimport { typeColor } from \"../config/color\";\r\nimport PokeContext from \"../config/pokeContext\";\r\n\r\nconst PokemonDetails = (props) => {\r\n  const [moves, setMoves] = useState();\r\n  const [pokemon, setPokemon] = useState();\r\n  const [flavourText, setFlavourText] = useState();\r\n  const { pokeId } = useParams();\r\n  const context = useContext(PokeContext);\r\n\r\n  const catchPokemon = () => {\r\n    let pokeName = pokeId;\r\n    let pokeNickname = prompt(\"Please name your pokemon\");\r\n    context.setMyPokemon({ name: pokeName, nickname: pokeNickname });\r\n    context.setOwnedPokemon(pokeName);\r\n  };\r\n\r\n  const initFlTxt = (data) => {\r\n    getPokeSpecies(data.name, data.url).then((res) => {\r\n      setFlavourText(res.flavor_text_entries[0].flavor_text);\r\n    });\r\n  };\r\n\r\n  const initData = () => {\r\n    // const pokeDeets = await getPokemon(pokeId);\r\n    // setPokemon(pokeDeets);\r\n\r\n    getPokemon(pokeId).then(async (res) => {\r\n      setPokemon(res);\r\n      let temp = res.moves;\r\n      let maxMove = temp.length;\r\n      if (temp.length > 4) {\r\n        maxMove = 4;\r\n      }\r\n      initFlTxt(res.species);\r\n      temp = temp.slice(0, maxMove);\r\n      temp = await Promise.all(\r\n        temp.map(async (el) => {\r\n          return await getPokeMoves(el.move.name, el.move.url);\r\n        })\r\n      );\r\n\r\n      setMoves(temp);\r\n    });\r\n\r\n    // let temp = pokeDeets.moves;\r\n    // let maxMove = temp.length;\r\n    // if (temp.length > 4) {\r\n    //   maxMove = 4;\r\n    // }\r\n    // setMoves(temp.slice(0, maxMove));\r\n  };\r\n\r\n  useEffect(() => {\r\n    initData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(moves);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: \"50%\",\r\n        height: \"447px\",\r\n        zIndex: 1,\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"10px\",\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: \"40%\",\r\n          height: \"100%\",\r\n          alignItems: \"center\",\r\n          paddingLeft: \"20px\",\r\n          paddingRight: \"20px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            maxHeight: \"100px\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            paddingTop: \"20px\",\r\n            paddingBottom: \"20px\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {pokemon ? (\r\n            <img\r\n              src={pokemon.sprites.front_default}\r\n              style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"20px\",\r\n            fontFamily: \"Roboto\",\r\n            fontStyle: \"normal\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"18px\",\r\n            lineHeight: \"21px\",\r\n          }}\r\n        >\r\n          {pokeId.charAt(0).toUpperCase() + pokeId.slice(1)}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"20px\",\r\n            fontFamily: \"Roboto\",\r\n            fontStyle: \"italic\",\r\n            fontWeight: \"300\",\r\n            fontSize: \"14px\",\r\n            lineHeight: \"16px\",\r\n          }}\r\n        >\r\n          {flavourText ? flavourText : null}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            paddingBottom: \"20px\",\r\n          }}\r\n        >\r\n          {pokemon\r\n            ? pokemon.types.map((data) => (\r\n                <PokeType colorName={data.type.name}>\r\n                  {data.type.name.charAt(0).toUpperCase() +\r\n                    data.type.name.slice(1)}\r\n                </PokeType>\r\n              ))\r\n            : null}\r\n        </div>\r\n        <div style={styleA}>\r\n          <div style={lTxt}>Height</div>\r\n          {pokemon ? (\r\n            <div style={{ fontSize: \"14px\" }}>{pokemon.height / 10}m</div>\r\n          ) : null}\r\n        </div>\r\n        <div style={styleA}>\r\n          <div style={lTxt}>Weight</div>\r\n          {pokemon ? (\r\n            <div style={{ fontSize: \"14px\" }}>{pokemon.weight / 10}kg</div>\r\n          ) : null}\r\n        </div>\r\n        <button\r\n          style={{\r\n            fontWeight: \"700\",\r\n            fontSize: \"14px\",\r\n            lineHeight: \"16px\",\r\n            color: \"white\",\r\n            width: \"150px\",\r\n            height: \"40px\",\r\n            backgroundColor: \"#F04C4C\",\r\n            border: \"none\",\r\n            borderRadius: \"25px\",\r\n            marginTop: \"40px\",\r\n          }}\r\n          onClick={catchPokemon}\r\n        >\r\n          CATCH\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"60%\",\r\n          height: \"100%\",\r\n          paddingLeft: \"20px\",\r\n          paddingRight: \"20px\",\r\n        }}\r\n      >\r\n        <div style={h2}>Stats</div>\r\n        <hr></hr>\r\n        <div style={{ columns: \"2 auto\" }}>\r\n          {pokemon\r\n            ? pokemon.stats.map((data) => (\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <span style={lTxt}>\r\n                    {data.stat.name.charAt(0).toUpperCase() +\r\n                      data.stat.name.slice(1, 11)}\r\n                  </span>\r\n                  <span>{data.base_stat}</span>\r\n                </div>\r\n              ))\r\n            : null}\r\n        </div>\r\n        <div style={h2}>Moves</div>\r\n        <hr></hr>\r\n        <div>\r\n          {moves\r\n            ? moves.map((data) => (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    paddingBottom: \"15px\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <p\r\n                      style={{\r\n                        ...lTxt,\r\n                        paddingBottom: \"10px\",\r\n                        margin: \"0\",\r\n                        textAlign: \"left\",\r\n                        fontWeight: \"normal\",\r\n                      }}\r\n                    >\r\n                      {data.name.charAt(0).toUpperCase() + data.name.slice(1)}\r\n                    </p>\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                      <p style={{ ...mr, ...lTxt }}>PP: {data.pp}</p>\r\n                      <p style={{ ...mr, ...lTxt }}>Power: {data.power}</p>\r\n                    </div>\r\n                  </div>\r\n                  <PokeType colorName={data.type.name}>\r\n                    {data.type.name.charAt(0).toUpperCase() +\r\n                      data.type.name.slice(1, 11)}\r\n                  </PokeType>\r\n                </div>\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst lTxt = {\r\n  fontWeight: \"300\",\r\n  fontStyle: \"normal\",\r\n  fontSize: \"14px\",\r\n};\r\n\r\nconst styleA = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  width: \"100%\",\r\n  justifyContent: \"space-around\",\r\n};\r\n\r\nconst h2 = {\r\n  fontWeight: 400,\r\n  fontStyle: \"normal\",\r\n  fontSize: \"24px\",\r\n  width: \"100%\",\r\n  textAlign: \"left\",\r\n  paddingTop: \"20px\",\r\n};\r\n\r\nconst mr = {\r\n  margin: \"0\",\r\n  paddingRight: \"10px\",\r\n};\r\n\r\nexport default PokemonDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getPokemon } from \"../api/pokeApi\";\r\nimport { typeColor } from \"../config/color\";\r\nimport PokeType from \"./PokeType\";\r\n\r\nconst Card = (props) => {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [type, setType] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const goToPokemon = () => {\r\n    history.push(\"/pokemon/\" + props.name);\r\n  };\r\n  const getDeets = async () => {\r\n    const pokeDeets = await getPokemon(props.name);\r\n    setImageUrl(pokeDeets.sprites.front_default); //url\r\n    //setImageUrl(pokeDeets.sprites.other[\"official-artwork\"].front_default); //url\r\n\r\n    setType(pokeDeets.types); //list, check api call\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDeets();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        height: \"150px\",\r\n        width: \"250px\",\r\n        marginBottom: \"20px\",\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"white\",\r\n      }}\r\n      onClick={goToPokemon}\r\n    >\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          zIndex: 1,\r\n          backgroundColor: \"#F04C4C\",\r\n          borderRadius: \"50px\",\r\n          width: \"30px\",\r\n          height: \"30px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          color: \"white\",\r\n          fontWeight: \"700\",\r\n        }}\r\n      >\r\n        {props.owned}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"50%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <img\r\n          src={imageUrl}\r\n          alt=\"Ivysaur sprite\"\r\n          style={{\r\n            maxWidth: \"100%\",\r\n            maxHeight: \"100%\",\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            zIndex: 2,\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          width: \"50%\",\r\n          paddingTop: \"25px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            margin: \"0px\",\r\n            padding: \"0px\",\r\n          }}\r\n        >\r\n          <p style={{ fontSize: \"18px\", margin: \"0px\", padding: \"0px\" }}>\r\n            {props.name.charAt(0).toUpperCase() + props.name.slice(1)}\r\n          </p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          {type.map((data) => (\r\n            <PokeType colorName={data.type.name}>\r\n              {data.type.name.toUpperCase()}\r\n            </PokeType>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { getAllPokemons } from \"../api/pokeApi\";\r\nimport Card from \"../components/Card\";\r\nimport PokeContext from \"../config/pokeContext\";\r\n\r\nconst PokemonList = () => {\r\n  const context = useContext(PokeContext);\r\n  const [pokeList, setPokeList] = useState();\r\n\r\n  const checkOwned = (data) => {\r\n    let myPoke = context.ownedPokemon;\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].name in myPoke) {\r\n        data[i].owned = myPoke[data[i].name];\r\n      }\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  const initPokes = async () => {\r\n    getAllPokemons().then((res) => {\r\n      let finalPokes = checkOwned(res);\r\n      setPokeList(finalPokes);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPokes();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingLeft: \"25px\",\r\n        paddingRight: \"25px\",\r\n      }}\r\n    >\r\n      <div style={{ columnCount: 5 }}>\r\n        {pokeList\r\n          ? pokeList.map((data) => (\r\n              <Card name={data.name} apiUrl={data.url} owned={data.owned} />\r\n            ))\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PokemonList;\r\n","import React, { useEffect } from \"react\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport signOut from \"@iconify/icons-bytesize/sign-out\";\r\nimport { colors } from \"../config/color\";\r\n\r\nconst ReleaseButton = (props) => {\r\n  return (\r\n    <button style={icLeave} onClick={props.clickHandler}>\r\n      <Icon icon={signOut} style={{ fontSize: props.size }} />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst icLeave = {\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  color: \"white\",\r\n  background: colors.navbar,\r\n  borderRadius: \"50px\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nexport default ReleaseButton;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { getPokemon } from \"../api/pokeApi\";\r\nimport { colors } from \"../config/color\";\r\nimport PokeContext from \"../config/pokeContext\";\r\nimport PokeType from \"./PokeType\";\r\nimport ReleaseButton from \"./ReleaseButton\";\r\n\r\nconst WideCard = (props) => {\r\n  const [type, setType] = useState([]);\r\n  const [poke, setPoke] = useState();\r\n  const context = useContext(PokeContext);\r\n\r\n  const releaseHandler = () => {\r\n    console.log(\"called\");\r\n    context.releasePokemon(props.name, props.nickname);\r\n  };\r\n\r\n  const initPoke = async () => {\r\n    //Get Pokemon data\r\n    const pokeDeets = await getPokemon(props.name);\r\n    setPoke(pokeDeets);\r\n    setType(pokeDeets.types); //list, check api call\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPoke();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: \"500px\",\r\n        height: \"150px\",\r\n        backgroundColor: \"white\",\r\n        marginBottom: \"10px\",\r\n        borderRadius: \"10px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"25%\",\r\n        }}\r\n      >\r\n        <img src={poke ? poke.sprites.front_default : null} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-around\",\r\n          width: \"75%\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            ...pad,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p style={{ fontSize: \"18px\", fontStyle: \"bold\" }}>\r\n            {props.nickname.charAt(0).toUpperCase() + props.nickname.slice(1)}\r\n          </p>\r\n          <ReleaseButton size={\"20px\"} clickHandler={releaseHandler} />\r\n        </div>\r\n        <div\r\n          style={{\r\n            margin: \"0 20px 0 20px\",\r\n            backgroundColor: colors.hp,\r\n            borderRadius: \"25px\",\r\n            fontSize: \"12px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {poke ? poke.stats[0].base_stat : null}/\r\n          {poke ? poke.stats[0].base_stat : null}\r\n        </div>\r\n        <div\r\n          style={{\r\n            ...pad,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {type.map((data) => {\r\n            console.log(data);\r\n            return (\r\n              <PokeType colorName={data.type.name}>\r\n                {data.type.name.toUpperCase()}\r\n              </PokeType>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst hBar = {\r\n  height: \"15px\",\r\n  backgroundColor: colors.hp,\r\n  borderRadius: \"20px\",\r\n};\r\n\r\nconst pad = {\r\n  padding: \"0 20px 0 20px\",\r\n};\r\n\r\nexport default WideCard;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PokeContext from \"../config/pokeContext\";\r\nimport WideCard from \"../components/WideCard\";\r\n\r\nconst MyPokemonList = () => {\r\n  const [pokeList, setPokeList] = useState();\r\n  const context = useContext(PokeContext);\r\n\r\n  const initPokes = async () => {\r\n    let pokes = context.myPokemon;\r\n\r\n    console.log(pokes);\r\n    setPokeList(pokes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPokes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {pokeList\r\n        ? pokeList.map((data) => (\r\n            <WideCard\r\n              nickname={data.nickname}\r\n              name={data.name}\r\n              apiUrl={data.url}\r\n            />\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPokemonList;\r\n","import { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport PokemonDetails from \"./pages/PokemonDetails\";\r\nimport PokemonList from \"./pages/pokemonList\";\r\nimport MyPokemonList from \"./pages/MyPokemonList\";\r\nimport PokeContext from \"./config/pokeContext\";\r\nimport { useState } from \"react\";\r\nimport { colors } from \"./config/color\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport backpack28Filled from \"@iconify/icons-fluent/backpack-28-filled\";\r\n\r\nfunction App() {\r\n  const [myPokemon, setMyPokemon] = useState([\r\n    {\r\n      name: \"squirtle\",\r\n      nickname: \"turtle\",\r\n      url: \"https://pokeapi.co/api/v2/pokemon/7/\",\r\n    },\r\n    {\r\n      name: \"bulbasaur\",\r\n      nickname: \"moving plant\",\r\n      url: \"https://pokeapi.co/api/v2/pokemon/1/\",\r\n    },\r\n  ]);\r\n  const [ownedPokemon, setOwnedPokemon] = useState({\r\n    squirtle: 1,\r\n    bulbasaur: 1,\r\n  });\r\n\r\n  return (\r\n    <PokeContext.Provider\r\n      value={{\r\n        myPokemon: myPokemon,\r\n        setMyPokemon: (newData) => {\r\n          setMyPokemon([...myPokemon, newData]);\r\n        },\r\n        releasePokemon: (name, nickname) => {\r\n          let temp = [];\r\n          for (let i = 0; i < myPokemon.length; i++) {\r\n            if (myPokemon[i].nickname == nickname) {\r\n              temp = myPokemon.slice(i, 1);\r\n            }\r\n          }\r\n          let nCount = ownedPokemon[\"name\"] - 1;\r\n          setMyPokemon(temp);\r\n          setOwnedPokemon(Object.assign({}, ownedPokemon, { [name]: nCount }));\r\n        },\r\n        ownedPokemon: ownedPokemon,\r\n        setOwnedPokemon: (newData) => {\r\n          let newCount = 1;\r\n          if (newData in ownedPokemon) {\r\n            newCount = ownedPokemon[newData] + 1;\r\n          }\r\n          setOwnedPokemon(\r\n            Object.assign({}, ownedPokemon, { [newData]: newCount })\r\n          );\r\n        },\r\n      }}\r\n    >\r\n      <Router>\r\n        <div\r\n          className=\"App\"\r\n          style={{ backgroundColor: colors.background, minHeight: \"100vh\" }}\r\n        >\r\n          <div style={navbar}>\r\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n              <p\r\n                className=\"logo\"\r\n                style={{\r\n                  color: colors.pokeGold,\r\n                  paddingTop: \"25px\",\r\n                  paddingBottom: \"25px\",\r\n                }}\r\n              >\r\n                POKEMON\r\n              </p>\r\n            </Link>\r\n            <Link to=\"/mypokemon\">\r\n              <div\r\n                style={{\r\n                  width: \"100px\",\r\n                  height: \"50px\",\r\n                  background: \"#FFDE00\",\r\n                  border: \"2px solid #3B4CCA\",\r\n                  boxSizing: \"border-box\",\r\n                  borderRadius: \"25px\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  display: \"flex\",\r\n                }}\r\n              >\r\n                <Icon\r\n                  style={{ width: \"30px\", height: \"30px\" }}\r\n                  icon={backpack28Filled}\r\n                />\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <PokemonList />\r\n            </Route>\r\n            <Route exact path=\"/pokemon/:pokeId\">\r\n              <PokemonDetails />\r\n            </Route>\r\n            <Route exact path=\"/mypokemon\">\r\n              <MyPokemonList />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </PokeContext.Provider>\r\n  );\r\n}\r\n\r\nconst navbar = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  paddingLeft: \"25px\",\r\n  paddingRight: \"25px\",\r\n  marginBottom: \"50px\",\r\n  backgroundColor: colors.navbar,\r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}